// <auto-generated />
using System;
using CodingTracker.Data.EntityContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodingTracker.Data.Migrations
{
    [DbContext(typeof(EntityContext))]
    partial class EntityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("CodingTracker.Common.CodingSessions.CodingSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DurationHHMM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("DurationSeconds")
                        .HasColumnType("REAL");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("GoalHHMM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("GoalReached")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("codingSessions");
                });

            modelBuilder.Entity("CodingTracker.Common.UserCredentials.UserCredential", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("userCredentials");
                });

            modelBuilder.Entity("CodingTracker.Common.CodingSessions.CodingSession", b =>
                {
                    b.HasOne("CodingTracker.Common.UserCredentials.UserCredential", "User")
                        .WithMany("CodingSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CodingTracker.Common.UserCredentials.UserCredential", b =>
                {
                    b.Navigation("CodingSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
